openapi: 3.0.3
info:
  title: 'Laravel API Documentation'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
tags:
  -
    name: Endpoints
    description: ''
paths:
  /api/send-test-broadcast:
    post:
      summary: ''
      operationId: postApiSendTestBroadcast
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: zbailey@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 8 characters.'
                  example: '-0pBNvYgxw'
                  nullable: false
              required:
                - name
                - email
                - password
      security: []
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: gbailey@example.net
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/create-room:
    post:
      summary: ''
      operationId: postApiCreateRoom
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/join-room:
    post:
      summary: 'Join a room using a code.'
      operationId: joinARoomUsingACode
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                room_code:
                  type: string
                  description: 'Must be 6 characters.'
                  example: bngzmi
                  nullable: false
              required:
                - room_code
      security: []
  /api/logout:
    post:
      summary: ''
      operationId: postApiLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/quizzes:
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
                category:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: v
                  nullable: true
                img_url:
                  type: string
                  description: 'Must not be greater than 2048 characters.'
                  example: 'http://www.dach.com/mollitia-modi-deserunt-aut-ab-provident-perspiciatis-quo.html'
                  nullable: true
                show_correct_answer:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                is_public:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                questions:
                  type: array
                  description: 'Add this line.'
                  example: null
                  items:
                    type: object
                    properties:
                      question_text:
                        type: string
                        description: 'This field is required when <code>questions</code> is present.'
                        example: architecto
                        nullable: false
                      question_type:
                        type: string
                        description: 'This field is required when <code>questions</code> is present.'
                        example: 'single choice'
                        nullable: false
                        enum:
                          - 'single choice'
                          - 'multiple choice'
                      difficulty:
                        type: string
                        description: ''
                        example: architecto
                        nullable: true
                      img_url:
                        type: string
                        description: ''
                        example: 'http://www.bailey.biz/quos-velit-et-fugiat-sunt-nihil-accusantium-harum.html'
                        nullable: true
                      time_to_answer:
                        type: integer
                        description: ''
                        example: 16
                        nullable: true
                      answer_options:
                        type: array
                        description: 'This field is required when <code>questions</code> is present. Must have at least 1 items.'
                        example: null
                        items:
                          type: object
                          properties:
                            answer_text:
                              type: string
                              description: ''
                              example: architecto
                              nullable: false
                            is_correct:
                              type: boolean
                              description: ''
                              example: false
                              nullable: false
                          required:
                            - answer_text
                            - is_correct
              required:
                - title
      security: []
  '/api/quizzes/{id}':
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: b
                  nullable: false
                description:
                  type: string
                  description: ''
                  example: 'Eius et animi quos velit et.'
                  nullable: true
                category:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: v
                  nullable: true
                img_url:
                  type: string
                  description: 'Must not be greater than 2048 characters.'
                  example: 'http://www.dach.com/mollitia-modi-deserunt-aut-ab-provident-perspiciatis-quo.html'
                  nullable: true
                show_correct_answer:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                is_public:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
              required:
                - title
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the quiz.'
        example: architecto
        required: true
        schema:
          type: string
  /api/questions:
    post:
      summary: 'Store a newly created question in the database.'
      operationId: storeANewlyCreatedQuestionInTheDatabase
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quiz_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the quizzes table.'
                  example: architecto
                  nullable: false
                question_text:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                question_type:
                  type: string
                  description: ''
                  example: 'single choice'
                  nullable: false
                  enum:
                    - 'single choice'
                    - 'multiple choice'
                difficulty:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
                img_url:
                  type: string
                  description: ''
                  example: 'http://www.bailey.biz/quos-velit-et-fugiat-sunt-nihil-accusantium-harum.html'
                  nullable: true
                time_to_answer:
                  type: integer
                  description: ''
                  example: 16
                  nullable: true
                answer_options:
                  type: array
                  description: 'Must have at least 1 items.'
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      answer_text:
                        type: string
                        description: ''
                        example: architecto
                        nullable: false
                      is_correct:
                        type: boolean
                        description: ''
                        example: true
                        nullable: false
                    required:
                      - answer_text
                      - is_correct
              required:
                - quiz_id
                - question_text
                - question_type
                - answer_options
      security: []
  '/api/questions/{id}':
    put:
      summary: 'Update the specified question in the database.'
      operationId: updateTheSpecifiedQuestionInTheDatabase
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quiz_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the quizzes table.'
                  example: architecto
                  nullable: false
                question_text:
                  type: string
                  description: ''
                  example: architecto
                  nullable: false
                question_type:
                  type: string
                  description: ''
                  example: 'single choice'
                  nullable: false
                  enum:
                    - 'single choice'
                    - 'multiple choice'
                difficulty:
                  type: string
                  description: ''
                  example: architecto
                  nullable: true
                img_url:
                  type: string
                  description: ''
                  example: 'http://www.bailey.biz/quos-velit-et-fugiat-sunt-nihil-accusantium-harum.html'
                  nullable: true
                time_to_answer:
                  type: integer
                  description: ''
                  example: 16
                  nullable: true
                answer_options:
                  type: array
                  description: 'Must have at least 1 items.'
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: 'The <code>id</code> of an existing record in the answers table.'
                        example: null
                        nullable: true
                      answer_text:
                        type: string
                        description: ''
                        example: architecto
                        nullable: false
                      is_correct:
                        type: boolean
                        description: ''
                        example: false
                        nullable: false
                    required:
                      - answer_text
                      - is_correct
              required:
                - quiz_id
                - question_text
                - question_type
                - answer_options
      security: []
    delete:
      summary: 'Remove the specified question from the database.'
      operationId: removeTheSpecifiedQuestionFromTheDatabase
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the question.'
        example: 16
        required: true
        schema:
          type: integer
  /api/check-answer:
    post:
      summary: ''
      operationId: postApiCheckAnswer
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the questions table.'
                  example: architecto
                  nullable: false
                answer_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the answers table.'
                  example: architecto
                  nullable: false
                user_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: architecto
                  nullable: false
                quiz_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the quizzes table.'
                  example: architecto
                  nullable: false
              required:
                - question_id
                - answer_id
                - user_id
                - quiz_id
      security: []
  /api/friendships:
    post:
      summary: ''
      operationId: postApiFriendships
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: architecto
                  nullable: false
                friend_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the users table. The value and <code>user_id</code> must be different.'
                  example: architecto
                  nullable: false
              required:
                - user_id
                - friend_id
      security: []
  '/api/friendships/{id}':
    put:
      summary: ''
      operationId: putApiFriendshipsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the friendship.'
        example: 16
        required: true
        schema:
          type: integer
